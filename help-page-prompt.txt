

in shadcn, tailwind, typescript, create a page for help
it start with enabling chrome built in ai features by gemini nano 


1) enabling chrome flags 

Open Chrome and navigate to chrome://flags/#optimization-guide-on-device-model
Select "Enabled BypassPerfRequirement"
This bypasses performance checks that might prevent Gemini Nano download


- Summarization-API-for-Gemini-Nano
- Experimental translation API

2) enabling summarize api 

- here use the check function 
if ("Summarizer" in self) {
  (async () => {
    try {
      const availability = await Summarizer.availability();
      console.log("Summarizer API availability:", availability);
    } catch (err) {
      console.error("Summarizer API exists but availability check failed:", err);
    }
  })();
} else {
  console.log("Summarizer API is NOT available in this Chrome build.");
}
- then add a button to trigger the download of the api 
async function initSummarizer() {
  try {
    const summarizer = await Summarizer.create({
      monitor(m) {
        m.addEventListener("downloadprogress", (e) => {
          console.log(`Download progress: ${(e.loaded * 100).toFixed(2)}%`);
        });

        m.addEventListener("statechange", (e) => {
          console.log("State changed:", e.state);
        });
      }
    });

    console.log("Summarizer ready:", summarizer);
  } catch (err) {
    console.error("Failed to initialize Summarizer:", err);
  }
}

// Attach to any click on the page
document.addEventListener("click", () => {
  console.log("Click detected, starting Summarizer download...");
  initSummarizer();
}, { once: true });


3) enabling translate API 


- check avalibilty , display 2 dropdowns for input and output language to check if they are avaliable
// Check if Translate API exists in this browser
if ("Translator" in self) {
  (async () => {
    try {
      const availability = await Translator.availability({
        sourceLanguage: "en",
        targetLanguage: "ar"
      });
      console.log("Translate API availability:", availability);
    } catch (err) {
      console.error("Translator API exists but availability check failed:", err);
    }
  })();
} else {
  console.log("Translate API is NOT available in this Chrome build.");
}


- trigger the download of it 
async function initTranslator() {
  try {
    const translator = await Translator.create({
      sourceLanguage: "en",
      targetLanguage: "ar",
      monitor(m) {
        m.addEventListener("downloadprogress", (e) => {
          console.log(`Download progress: ${(e.loaded * 100).toFixed(2)}%`);
        });

        m.addEventListener("statechange", (e) => {
          console.log("State changed:", e.state);
        });
      }
    });

    console.log("Translator ready:", translator);
  } catch (err) {
    console.error("Failed to initialize Translator:", err);
  }
}

// Trigger the download on first click anywhere on the page
document.addEventListener("click", () => {
  console.log("Click detected, starting Translator download...");
  initTranslator();
}, { once: true });